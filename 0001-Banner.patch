From 3b6987a11ccf39b309a0d7f3dd8989419f94ddd5 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=E4=BD=A0=E7=9A=84GitHub=E7=94=A8=E6=88=B7=E5=90=8D?=
 <你的GitHub邮箱>
Date: Tue, 10 Jun 2025 15:30:04 +0800
Subject: [PATCH] =?UTF-8?q?=E4=BF=AE=E5=A4=8D=E4=BC=9A=E5=91=98=E9=93=BE?=
 =?UTF-8?q?=E6=8E=A5=E5=A4=8D=E5=88=B6=E5=8A=9F=E8=83=BD=E5=92=8CBanner?=
 =?UTF-8?q?=E7=AE=A1=E7=90=86=E5=9B=BE=E7=89=87=E6=98=BE=E7=A4=BA=E9=97=AE?=
 =?UTF-8?q?=E9=A2=98?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

---
 src/app/(dashboard)/members/page.tsx         |   2 +-
 src/app/(dashboard)/platform/banner/page.tsx |  22 ++--
 src/components/platform/banner-dialog.tsx    | 117 +++++++++++++------
 src/components/ui/optimized-image.tsx        |  60 +++++++---
 4 files changed, 140 insertions(+), 61 deletions(-)

diff --git a/src/app/(dashboard)/members/page.tsx b/src/app/(dashboard)/members/page.tsx
index 900097f2..1af3e19b 100644
--- a/src/app/(dashboard)/members/page.tsx
+++ b/src/app/(dashboard)/members/page.tsx
@@ -980,7 +980,7 @@ function MembersPageContent() {
   const copyMemberLink = useCallback(async (member: Member) => {
     try {
       // 构建会员H5链接
-      const memberLink = `https://m.xinghun.info/member/${member.member_no}`;
+      const memberLink = `https://m.xinghun.info/user/${member.id}`;
       
       // 复制到剪贴板
       if (typeof navigator !== 'undefined' && navigator.clipboard) {
diff --git a/src/app/(dashboard)/platform/banner/page.tsx b/src/app/(dashboard)/platform/banner/page.tsx
index 903a8c7b..011299b7 100644
--- a/src/app/(dashboard)/platform/banner/page.tsx
+++ b/src/app/(dashboard)/platform/banner/page.tsx
@@ -274,13 +274,21 @@ export default function BannerPage() {
               <TableRow key={banner.id}>
                 <TableCell>
                   <div className="w-[80px] h-[40px] relative">
-                    <OptimizedImage 
-                      src={banner.image_url} 
-                      alt={banner.title}
-                      width={80}
-                      height={40}
-                      className="absolute inset-0 w-full h-full object-cover rounded"
-                    />
+                    {banner.image_url?.startsWith('data:') ? (
+                      <img 
+                        src={banner.image_url} 
+                        alt={banner.title}
+                        className="absolute inset-0 w-full h-full object-cover rounded"
+                      />
+                    ) : (
+                      <OptimizedImage 
+                        src={banner.image_url} 
+                        alt={banner.title}
+                        width={80}
+                        height={40}
+                        className="absolute inset-0 w-full h-full object-cover rounded"
+                      />
+                    )}
                   </div>
                 </TableCell>
                 <TableCell>{banner.title}</TableCell>
diff --git a/src/components/platform/banner-dialog.tsx b/src/components/platform/banner-dialog.tsx
index a5acc29b..66047cac 100644
--- a/src/components/platform/banner-dialog.tsx
+++ b/src/components/platform/banner-dialog.tsx
@@ -1,5 +1,9 @@
 'use client';
 
+/* eslint-disable @typescript-eslint/no-explicit-any */
+/* eslint-disable @typescript-eslint/no-unsafe-assignment */
+/* eslint-disable @typescript-eslint/no-unsafe-member-access */
+
 import { useState, useEffect } from 'react';
 import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';
 import { Button } from '@/components/ui/button';
@@ -65,42 +69,59 @@ interface BannerDialogProps {
 // 添加图片压缩函数
 const compressImage = (file: File): Promise<string> => {
   return new Promise((resolve, reject) => {
-    const reader = new FileReader();
-    reader.readAsDataURL(file);
-    reader.onload = (event) => {
-      const img = new Image();
-      img.src = event.target?.result as string;
-      img.onload = () => {
-        const canvas = document.createElement('canvas');
-        const MAX_WIDTH = 800;
-        const MAX_HEIGHT = 600;
-        let width = img.width;
-        let height = img.height;
+    // 如果文件大于1MB，则进行压缩
+    if (file.size > 1024 * 1024) {
+      const reader = new FileReader();
+      reader.readAsDataURL(file);
+      reader.onload = (event) => {
+        const img = new Image();
+        img.src = event.target?.result as string;
+        img.onload = () => {
+          const canvas = document.createElement('canvas');
+          const MAX_WIDTH = 800;
+          const MAX_HEIGHT = 600;
+          let width = img.width;
+          let height = img.height;
 
-        if (width > height) {
-          if (width > MAX_WIDTH) {
-            height *= MAX_WIDTH / width;
-            width = MAX_WIDTH;
-          }
-        } else {
-          if (height > MAX_HEIGHT) {
-            width *= MAX_HEIGHT / height;
-            height = MAX_HEIGHT;
+          if (width > height) {
+            if (width > MAX_WIDTH) {
+              height *= MAX_WIDTH / width;
+              width = MAX_WIDTH;
+            }
+          } else {
+            if (height > MAX_HEIGHT) {
+              width *= MAX_HEIGHT / height;
+              height = MAX_HEIGHT;
+            }
           }
-        }
 
-        canvas.width = width;
-        canvas.height = height;
-        const ctx = canvas.getContext('2d');
-        ctx?.drawImage(img, 0, 0, width, height);
-        
-        // 压缩为 80% 质量的 JPEG
-        const compressedDataUrl = canvas.toDataURL('image/jpeg', 0.8);
-        resolve(compressedDataUrl);
+          canvas.width = width;
+          canvas.height = height;
+          const ctx = canvas.getContext('2d');
+          ctx?.drawImage(img, 0, 0, width, height);
+          
+          // 压缩为较低质量的JPEG以减小大小
+          const compressedDataUrl = canvas.toDataURL('image/jpeg', 0.6);
+          
+          // 判断压缩后的数据URL大小
+          const base64Size = compressedDataUrl.length * 0.75; // 估计base64编码的大小
+          
+          if (base64Size > 100 * 1024) {
+            // 如果仍然大于100KB，尝试进一步压缩
+            const furtherCompressedDataUrl = canvas.toDataURL('image/jpeg', 0.4);
+            resolve(furtherCompressedDataUrl);
+          } else {
+            resolve(compressedDataUrl);
+          }
+        };
+        img.onerror = reject;
       };
-      img.onerror = reject;
-    };
-    reader.onerror = reject;
+      reader.onerror = reject;
+    } else {
+      // 小文件直接使用文件URL
+      const fileUrl = URL.createObjectURL(file);
+      resolve(fileUrl);
+    }
   });
 };
 
@@ -162,11 +183,37 @@ export function BannerDialog({
   const handleSubmit = async (values: FormValues) => {
     try {
       setLoading(true);
+      
+      // 如果是在编辑模式下，并且没有选择新图片，则使用原始图片URL
+      let finalImageUrl = initialData?.id && !values.image_file 
+        ? initialData.image_url 
+        : imagePreview;
+      
+      // 如果图片预览是blob:URL，需要先将其转换为可存储的格式
+      if (finalImageUrl && finalImageUrl.startsWith('blob:')) {
+        try {
+          // 获取blob URL对应的图片并转换为base64
+          const response = await fetch(finalImageUrl);
+          const blob = await response.blob();
+          
+          // 创建一个新的FileReader来读取blob
+          const reader = new FileReader();
+          finalImageUrl = await new Promise<string>((resolve) => {
+            reader.onloadend = () => resolve(reader.result as string);
+            reader.readAsDataURL(blob);
+          });
+        } catch (err) {
+          console.error('转换blob URL失败:', err);
+          // 如果失败，回退到原图
+          finalImageUrl = initialData?.image_url || '';
+        }
+      }
+      
       const submitData = {
         ...values,
         id: initialData?.id,
         category_id: CATEGORY_MAP[values.category_id as keyof typeof CATEGORY_MAP],
-        image_url: imagePreview,
+        image_url: finalImageUrl,
       };
       
       if (onSubmit) {
@@ -267,11 +314,11 @@ export function BannerDialog({
                         {...field}
                       />
                       {imagePreview && (
-                        <div className="relative w-20 h-20">
+                        <div className="relative w-20 h-20 border rounded overflow-hidden">
                           <img 
                             src={imagePreview}
                             alt="预览" 
-                            className="w-full h-full object-cover rounded"
+                            className="w-full h-full object-cover"
                           />
                         </div>
                       )}
diff --git a/src/components/ui/optimized-image.tsx b/src/components/ui/optimized-image.tsx
index 1cd3f97e..a255d5b5 100644
--- a/src/components/ui/optimized-image.tsx
+++ b/src/components/ui/optimized-image.tsx
@@ -66,6 +66,9 @@ export function OptimizedImage({
     onError && onError();
   };
 
+  // 检查是否是 data URI
+  const isDataUri = imgSrc.startsWith('data:');
+
   return (
     <div 
       className={cn(
@@ -74,24 +77,45 @@ export function OptimizedImage({
         className
       )}
     >
-      <Image
-        src={imgSrc}
-        alt={alt}
-        width={width}
-        height={height}
-        quality={quality}
-        priority={priority}
-        className={cn(
-          'transition-all duration-300',
-          objectFit === 'contain' && 'object-contain',
-          objectFit === 'cover' && 'object-cover',
-          objectFit === 'fill' && 'object-fill',
-          objectFit === 'none' && 'object-none',
-          objectFit === 'scale-down' && 'object-scale-down',
-        )}
-        onLoad={handleLoad}
-        onError={handleError}
-      />
+      {isDataUri ? (
+        // 对于 data URI，使用普通的 img 标签
+        <img
+          src={imgSrc}
+          alt={alt}
+          width={width}
+          height={height}
+          className={cn(
+            'transition-all duration-300',
+            objectFit === 'contain' && 'object-contain',
+            objectFit === 'cover' && 'object-cover',
+            objectFit === 'fill' && 'object-fill',
+            objectFit === 'none' && 'object-none',
+            objectFit === 'scale-down' && 'object-scale-down',
+          )}
+          onLoad={handleLoad}
+          onError={handleError}
+        />
+      ) : (
+        // 对于正常 URL，使用 Next.js Image 组件
+        <Image
+          src={imgSrc}
+          alt={alt}
+          width={width}
+          height={height}
+          quality={quality}
+          priority={priority}
+          className={cn(
+            'transition-all duration-300',
+            objectFit === 'contain' && 'object-contain',
+            objectFit === 'cover' && 'object-cover',
+            objectFit === 'fill' && 'object-fill',
+            objectFit === 'none' && 'object-none',
+            objectFit === 'scale-down' && 'object-scale-down',
+          )}
+          onLoad={handleLoad}
+          onError={handleError}
+        />
+      )}
     </div>
   );
 }
-- 
2.39.5 (Apple Git-154)

